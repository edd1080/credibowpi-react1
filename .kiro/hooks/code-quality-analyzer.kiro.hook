{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes them for potential improvements including code smells, design patterns, and best practices. Provides suggestions for improving readability, maintainability, and performance while maintaining existing functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "credibowpi-mobile/src/**/*.ts",
      "credibowpi-mobile/src/**/*.tsx",
      "credibowpi-mobile/Authentication/**/*.ts",
      "credibowpi-mobile/scripts/**/*.js",
      "credibowpi-mobile/scripts/**/*.ts"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified source code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for TypeScript best practices, React/React Native patterns, and mobile development guidelines\n4. **Performance**: Look for potential performance optimizations without changing functionality\n5. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n6. **Security**: Identify potential security issues, especially for authentication and data handling code\n7. **Testing**: Suggest areas that need better test coverage or testing improvements\n\nFor each suggestion:\n- Explain WHY the change would be beneficial\n- Provide a concrete code example of the improvement\n- Indicate the priority level (High/Medium/Low)\n- Ensure the suggestion maintains existing functionality\n\nConsider the CrediBowpi mobile app context: offline-first architecture, React Native with TypeScript, authentication systems, form handling, and field agent usage patterns."
  }
}